[gd_scene load_steps=11 format=3 uid="uid://hlgxjgxnxfag"]

[ext_resource type="Texture2D" uid="uid://2me0uatsgp3k" path="res://assets/sprites/slime_purple.png" id="1_0mgpl"]
[ext_resource type="Script" path="res://scripts/slime.gd" id="1_bbrll"]
[ext_resource type="PackedScene" uid="uid://c6jpdvt0njj8u" path="res://scenes/killzone.tscn" id="2_go1qh"]

[sub_resource type="GDScript" id="GDScript_l658j"]
script/source = "class_name Health
extends Node2D

signal max_health_changed(diff: int)
signal health_changed(diff: int)
signal health_depleted

@export var max_health: int = 100 : set = set_max_health, get = get_max_health
@export var immortality: bool = false : set = set_immortality, get = get_immortality

var immortality_timer: Timer = null

@onready var health: int = max_health : set = set_health, get = get_health

func set_max_health(value: int):
	var clamped_value = 1 if value <= 0 else value
	
	if not clamped_value == max_health:
		var difference = clamped_value - max_health
		max_health = value
		max_health_changed.emit(difference)
		
		if health > max_health:
			health = max_health

func get_max_health() -> int:
	return max_health

func set_immortality(value: bool):
	immortality = value

func get_immortality() -> bool:
	return immortality

func set_temporary_immortality(time: float):
	if immortality_timer == null:
		immortality_timer = Timer.new()
		immortality_timer.one_shot = true
		add_child(immortality_timer)
		
	if immortality_timer.timeout.is_connected(set_immortality):
		immortality_timer.timeout.disconnect(set_immortality)
	
	immortality_timer.set_wait_time(time)
	immortality_timer.timeout.connect(set_immortality.bind(false))
	immortality = true
	immortality_timer.start()



func set_health(value: int):
	if value < health and immortality:
		return
	
	var clamped_value = clampi(value, 0, max_health)
	
	if clamped_value != health:
		var difference = clamped_value - health
		health = value
		health_changed.emit(difference)
		
	if health ==0:
		health_depleted.emit()

func get_health() -> int:
	return health
"

[sub_resource type="AtlasTexture" id="AtlasTexture_ueeg2"]
atlas = ExtResource("1_0mgpl")
region = Rect2(0, 24, 24, 24)

[sub_resource type="AtlasTexture" id="AtlasTexture_vy3cy"]
atlas = ExtResource("1_0mgpl")
region = Rect2(24, 24, 24, 24)

[sub_resource type="AtlasTexture" id="AtlasTexture_qliqc"]
atlas = ExtResource("1_0mgpl")
region = Rect2(48, 24, 24, 24)

[sub_resource type="AtlasTexture" id="AtlasTexture_xe4ul"]
atlas = ExtResource("1_0mgpl")
region = Rect2(72, 24, 24, 24)

[sub_resource type="SpriteFrames" id="SpriteFrames_egxp5"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ueeg2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vy3cy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qliqc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xe4ul")
}],
"loop": true,
"name": &"default",
"speed": 10.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_5m8q0"]
size = Vector2(8, 14)

[node name="Slime" type="Node2D"]
script = ExtResource("1_bbrll")

[node name="Health" type="Node2D" parent="."]
script = SubResource("GDScript_l658j")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
position = Vector2(0, -12)
sprite_frames = SubResource("SpriteFrames_egxp5")
autoplay = "default"
frame_progress = 0.370901
flip_h = true

[node name="Killzone" parent="." instance=ExtResource("2_go1qh")]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Killzone"]
position = Vector2(0, -7)
shape = SubResource("RectangleShape2D_5m8q0")

[node name="RayCastRight" type="RayCast2D" parent="."]
position = Vector2(0, -7)
target_position = Vector2(10, 0)

[node name="RayCastLeft" type="RayCast2D" parent="."]
position = Vector2(0, -7)
target_position = Vector2(-9, 0)
